/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
ListNode* doubleIt(ListNode* head) {
  
 long long n=0;
        while(head){
            n = n*10 + head->val;
            head = head->next; 
        }
        if(n ==0)
        return new ListNode(0);
        n = n*2; 

        vector<int>v; 
        while(n){
            int last = n%10; 
            n = n/10; 
            v.push_back(last);
        }
     int size = v.size();
     ListNode* ans = NULL;
     ListNode* tail = NULL; 
     for(int i=size -1; i>=0; i--)
     {
        int data = v[i];
        ListNode* arr = new ListNode(data);
            if(tail == NULL){
                tail = arr; 
                ans = arr; 
            } else {
                tail ->next = arr; 
                tail = arr; 
            }
     }
     return ans; 
    }
};
